[build-system]
build-backend = "mesonpy"
requires = [
    "numpy",
    "meson-python",
    "meson",
]

[project]
requires-python = ">=3.10"
name = "pyfsolver"
version = "0.1.0"
dependencies = [
    "numpy",
    "scipy",
    "typer[all]",
    "rich",
]

[tool.meson-python.args]
compile = ['-j2']


[project.optional-dependencies]
dev = [
    "numpy",
    "meson-python",
    "meson",
    "build",
    "pytest",
    "black",
    "mypy",
    "taskipy",
    "flake8",
    "Flake8-pyproject",
    "isort",
    "ipdb",
    "ipython",
    "pre-commit",
    "ninja",
    "fprettify",
]

[project.scripts]
pyfsolver =  "pyfsolver.cli:app"

[tool.flake8]
exclude = [".venv", "build", "builddir"]
max-line-length = 120


[tool.black]
line-length = 120
exclude = '''
/(
      \.eggs
    | \.git
    | \.venv
    | build
    | dist
    | builddir
)/
'''

[tool.isort]
profile = "black"
src_paths = ["src.pyfsolver", "tests"]
multi_line_output = 3
known_local_folder = "pyfsolver"


[tool.mypy]
warn_return_any = true
warn_unused_configs = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "scipy",
    "pyfsolver.cli",
    "pyfsolver.coo",
    "pyfsolver.pyfortran.solver",
    "pyfsolver.pyfortran.blas",
    "pyfsolver.numpy.solver",
    "pyfsolver.numpy.blas",
    "pyfsolver._lfsolver",
    "pyfsolver.timer",
]
ignore_missing_imports = true


[tool.taskipy.variables]
src_module = "src/pyfsolver"

[tool.taskipy.tasks]
isort = {cmd="isort tests {src_module}", help="Ordenando as importações.", use_vars = true}
black = {cmd="black tests {src_module}", help="Formatação com black.", use_vars = true}
fprettify = {cmd="fprettify tests/fortran/*", help="Formatação com fprettify" }
fmt = {cmd="task isort && task black && task fprettify", help="Formatador do código."}
mypy = {cmd="mypy --package tests --package src.pyfsolver", help="Analisador estatico de tipos."}
linter = {cmd="task mypy && flake8", help="Linter."}
meson_setup = {cmd="meson setup builddir --wipe", help="Setup do Meson."}
meson_compile = {cmd="meson compile -C builddir", help="Compilando com o Meson."}
test_lib = {cmd="meson test -C builddir", help="Rodando os testes da lib."}
test = {cmd="pytest tests", help="Rodando os testes."}
outdated = {cmd="pip list --outdated", help="Listando os pacotes antigos."}
package = {cmd="python -m build", help="Gerando o pacote python."}
clean = {help="Limpa o projeto.", cmd="rm -rfv .pytest_cache && rm -rfv .mypy_cache && rm -rfv build && rm -rfv dist && rm -rfv *.egg-info && find ./src -name '*.pyc' -exec rm -vf {} \\;"}

[tool.pytest.ini_options]
addopts = "-ra -vv --strict-markers"
testpaths = [
    "tests",
]
markers=[
    "unity: marks unity tests",
    "integration: marks integration testes",
    "math: marks matematical core tests",
    "cli: marks cli tests",
]
